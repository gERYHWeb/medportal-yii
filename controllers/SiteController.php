<?php

namespace app\controllers;

use Yii;
use yii\data\Pagination;
use yii\filters\AccessControl;
use yii\web\Controller;
use yii\web\Response;
use yii\filters\VerbFilter;
use app\models\Config;
use yii\httpclient\Client;

class SiteController extends Controller
{
    /**
     * {@inheritdoc}
     */

    public function beforeAction($action)
    {

//        if(Yii::$app->user->isGuest){
//            return $this->redirect(Yii::$app->urlManager->createUrl(['site/login']));
//        }

        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    public function behaviors()
    {
        return [
            'access' => [
                'class' => AccessControl::className(),
                'only' => ['logout'],
                'rules' => [
                    [
                        'actions' => ['logout'],
                        'allow' => true,
                        'roles' => ['@'],
                    ],
                ],
            ],
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'logout' => ['post'],
                ],
            ],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function actions()
    {
        return [
            'error' => [
                'class' => 'yii\web\ErrorAction',
            ],
            'captcha' => [
                'class' => 'yii\captcha\CaptchaAction',
                'fixedVerifyCode' => YII_ENV_TEST ? 'testme' : null,
            ],
        ];
    }

    /**
     * Displays homepage.
     *
     * @return string
     */
    public function actionIndex()
    {
        return $this->render('index');
    }

    /**
     * Login action.
     *
     * @return Response|string
     */
//    public function actionLogin()
//    {
//        if (!Yii::$app->user->isGuest) {
//            return $this->goHome();
//        }
//
//        $model = new LoginForm();
//        if ($model->load(Yii::$app->request->post()) && $model->login()) {
//            return $this->goBack();
//        }
//
//        $model->password = '';
//        return $this->render('login', [
//            'model' => $model,
//        ]);
//    }

    /**
     * Logout action.
     *
     * @return Response
     */
//    public function actionLogout()
//    {
//        Yii::$app->user->logout();
//
//        return $this->goHome();
//    }

    /**
     * Displays contact page.
     *
     * @return Response|string
     */
    public function actionOrders()
    {
        $orders = self::restGET('/rest/get-orders');
       // print_r($orders);exit();
        return $this->render('orders', [
            'orders' => $orders['result']['data']
        ]);
    }

    public function actionConsts()
    {
        $result = self::restGET('/rest/get-consts');
        
       // print_r($result);exit();
        return $this->render('consts', [
            'consts' => $result['result']['data']
        ]);
    }

    public function actionOrderStatus()
    {
        $get = Yii::$app->request->get();
        $result = self::restPOST('/rest/update-order', [
            "order_id" => $get['id'],
            "data" => [
                "status" => $get['status']
            ]
        ]);

        return $this->redirect('/orders');
    }

    public function actionEditConst()
    {
        $get = Yii::$app->request->get();
        $result = self::restPOST('/rest/update-const', [
            "const_id" => $get['id'],
            "data" => $get['data']
        ]);

        return $this->redirect('/consts');
    }

    public static function restGET( $url = false ) {
        if(!$url) return null;
        else $url = Yii::$app->getRequest()->getHostInfo() . $url;

        $ch = curl_init();
        if ( $ch === false ) {
            throw new Exception( 'Can\'t initialize curl session' );
        }
        curl_setopt( $ch, CURLOPT_URL, $url );
        curl_setopt( $ch, CURLOPT_CONNECTTIMEOUT, 15 );
        curl_setopt( $ch, CURLOPT_TIMEOUT, 90 );
        curl_setopt( $ch, CURLOPT_RETURNTRANSFER, true );
        curl_setopt( $ch, CURLOPT_SSL_VERIFYPEER, false );
        curl_setopt( $ch, CURLOPT_SSL_VERIFYHOST, false );
        curl_setopt( $ch, CURLOPT_HTTPHEADER, [
                'REST_API: ' . Config::REST_API_KEY
            ]
        );

        $result = curl_exec( $ch );
        $error = curl_error( $ch );
        curl_close( $ch );

        return [ 'result' => json_decode($result, true), 'plain' => $result, 'error' => $error ];
    }

    public static function restPOST( $url = false, $data = [] ) {
        if(!$url) return null;
        else $url = Yii::$app->getRequest()->getHostInfo() . $url;

        $ch = curl_init();
        if ( $ch === false ) {
            throw new Exception( 'Can\'t initialize curl session' );
        }

        curl_setopt( $ch, CURLOPT_URL, $url );
        curl_setopt( $ch, CURLOPT_CONNECTTIMEOUT, 15 );
        curl_setopt( $ch, CURLOPT_TIMEOUT, 90 );
        curl_setopt( $ch, CURLOPT_RETURNTRANSFER, true );
        curl_setopt( $ch, CURLOPT_SSL_VERIFYPEER, false );
        curl_setopt( $ch, CURLOPT_SSL_VERIFYHOST, false );
        curl_setopt( $ch, CURLOPT_POST, true );
        curl_setopt( $ch, CURLOPT_POSTFIELDS, http_build_query($data) );
        curl_setopt($ch,CURLOPT_USERAGENT,'REST API Client v.1.1');
        curl_setopt( $ch, CURLOPT_HTTPHEADER, [
                'Content-Type: application/x-www-form-urlencoded',
                'REST_API: ' . Config::REST_API_KEY,
                'Content-Length: ' . strlen( http_build_query($data) )
            ]
        );

        $result = curl_exec( $ch );
        $error = curl_error( $ch );
        curl_close( $ch );

        return [ 'result' => json_decode($result, true), 'plain' => $result, 'error' => $error ];
    }
}
